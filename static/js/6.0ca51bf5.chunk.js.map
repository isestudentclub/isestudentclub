{"version":3,"sources":["../node_modules/shortid/lib/alphabet.js","../node_modules/shortid/index.js","../node_modules/shortid/lib/index.js","../node_modules/shortid/lib/random/random-from-seed.js","../node_modules/shortid/lib/build.js","../node_modules/shortid/lib/generate.js","../node_modules/shortid/lib/random/random-byte-browser.js","../node_modules/nanoid/format.browser.js","../node_modules/shortid/lib/is-valid.js","../node_modules/shortid/lib/util/cluster-worker-id-browser.js","Daks.js"],"names":["alphabet","previousSeed","shuffled","randomFromSeed","require","ORIGINAL","reset","setCharacters","_alphabet_","length","Error","unique","split","filter","item","ind","arr","lastIndexOf","join","getShuffled","characterIndex","sourceArray","targetArray","r","nextValue","Math","floor","push","splice","shuffle","module","exports","get","characters","seed","lookup","index","build","isValid","clusterWorkerId","generate","seedValue","worker","workerId","newCharacters","undefined","_seed_","counter","previousSeconds","str","seconds","Date","now","random","format","number","done","loopCounter","pow","randomByte","crypto","window","msCrypto","getRandomValues","size","Uint8Array","bytes","i","mask","log","LN2","step","id","RegExp","replace","test","Daks","useEffect","location","hostname","firebase","analytics","logEvent","title","useState","headingType","setHeadingType","className","style","minHeight","paddingTop","padding","options","loop","delay","onInit","typewriter","typeString","callFunction","stop","start","paddingLeft","href","target","rel","div","initial","y","opacity","transition","duration","animate","name","src","Content","col","useColorModeValue","col2","qna","map","q","color","ques","ans","Array","isArray","que","shortid"],"mappings":"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","file":"static/js/6.0ca51bf5.chunk.js","sourcesContent":["'use strict';\n\nvar randomFromSeed = require('./random/random-from-seed');\n\nvar ORIGINAL = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_-';\nvar alphabet;\nvar previousSeed;\n\nvar shuffled;\n\nfunction reset() {\n    shuffled = false;\n}\n\nfunction setCharacters(_alphabet_) {\n    if (!_alphabet_) {\n        if (alphabet !== ORIGINAL) {\n            alphabet = ORIGINAL;\n            reset();\n        }\n        return;\n    }\n\n    if (_alphabet_ === alphabet) {\n        return;\n    }\n\n    if (_alphabet_.length !== ORIGINAL.length) {\n        throw new Error('Custom alphabet for shortid must be ' + ORIGINAL.length + ' unique characters. You submitted ' + _alphabet_.length + ' characters: ' + _alphabet_);\n    }\n\n    var unique = _alphabet_.split('').filter(function(item, ind, arr){\n       return ind !== arr.lastIndexOf(item);\n    });\n\n    if (unique.length) {\n        throw new Error('Custom alphabet for shortid must be ' + ORIGINAL.length + ' unique characters. These characters were not unique: ' + unique.join(', '));\n    }\n\n    alphabet = _alphabet_;\n    reset();\n}\n\nfunction characters(_alphabet_) {\n    setCharacters(_alphabet_);\n    return alphabet;\n}\n\nfunction setSeed(seed) {\n    randomFromSeed.seed(seed);\n    if (previousSeed !== seed) {\n        reset();\n        previousSeed = seed;\n    }\n}\n\nfunction shuffle() {\n    if (!alphabet) {\n        setCharacters(ORIGINAL);\n    }\n\n    var sourceArray = alphabet.split('');\n    var targetArray = [];\n    var r = randomFromSeed.nextValue();\n    var characterIndex;\n\n    while (sourceArray.length > 0) {\n        r = randomFromSeed.nextValue();\n        characterIndex = Math.floor(r * sourceArray.length);\n        targetArray.push(sourceArray.splice(characterIndex, 1)[0]);\n    }\n    return targetArray.join('');\n}\n\nfunction getShuffled() {\n    if (shuffled) {\n        return shuffled;\n    }\n    shuffled = shuffle();\n    return shuffled;\n}\n\n/**\n * lookup shuffled letter\n * @param index\n * @returns {string}\n */\nfunction lookup(index) {\n    var alphabetShuffled = getShuffled();\n    return alphabetShuffled[index];\n}\n\nfunction get () {\n  return alphabet || ORIGINAL;\n}\n\nmodule.exports = {\n    get: get,\n    characters: characters,\n    seed: setSeed,\n    lookup: lookup,\n    shuffled: getShuffled\n};\n","'use strict';\nmodule.exports = require('./lib/index');\n","'use strict';\n\nvar alphabet = require('./alphabet');\nvar build = require('./build');\nvar isValid = require('./is-valid');\n\n// if you are using cluster or multiple servers use this to make each instance\n// has a unique value for worker\n// Note: I don't know if this is automatically set when using third\n// party cluster solutions such as pm2.\nvar clusterWorkerId = require('./util/cluster-worker-id') || 0;\n\n/**\n * Set the seed.\n * Highly recommended if you don't want people to try to figure out your id schema.\n * exposed as shortid.seed(int)\n * @param seed Integer value to seed the random alphabet.  ALWAYS USE THE SAME SEED or you might get overlaps.\n */\nfunction seed(seedValue) {\n    alphabet.seed(seedValue);\n    return module.exports;\n}\n\n/**\n * Set the cluster worker or machine id\n * exposed as shortid.worker(int)\n * @param workerId worker must be positive integer.  Number less than 16 is recommended.\n * returns shortid module so it can be chained.\n */\nfunction worker(workerId) {\n    clusterWorkerId = workerId;\n    return module.exports;\n}\n\n/**\n *\n * sets new characters to use in the alphabet\n * returns the shuffled alphabet\n */\nfunction characters(newCharacters) {\n    if (newCharacters !== undefined) {\n        alphabet.characters(newCharacters);\n    }\n\n    return alphabet.shuffled();\n}\n\n/**\n * Generate unique id\n * Returns string id\n */\nfunction generate() {\n  return build(clusterWorkerId);\n}\n\n// Export all other functions as properties of the generate function\nmodule.exports = generate;\nmodule.exports.generate = generate;\nmodule.exports.seed = seed;\nmodule.exports.worker = worker;\nmodule.exports.characters = characters;\nmodule.exports.isValid = isValid;\n","'use strict';\n\n// Found this seed-based random generator somewhere\n// Based on The Central Randomizer 1.3 (C) 1997 by Paul Houle (houle@msc.cornell.edu)\n\nvar seed = 1;\n\n/**\n * return a random number based on a seed\n * @param seed\n * @returns {number}\n */\nfunction getNextValue() {\n    seed = (seed * 9301 + 49297) % 233280;\n    return seed/(233280.0);\n}\n\nfunction setSeed(_seed_) {\n    seed = _seed_;\n}\n\nmodule.exports = {\n    nextValue: getNextValue,\n    seed: setSeed\n};\n","'use strict';\n\nvar generate = require('./generate');\nvar alphabet = require('./alphabet');\n\n// Ignore all milliseconds before a certain time to reduce the size of the date entropy without sacrificing uniqueness.\n// This number should be updated every year or so to keep the generated id short.\n// To regenerate `new Date() - 0` and bump the version. Always bump the version!\nvar REDUCE_TIME = 1567752802062;\n\n// don't change unless we change the algos or REDUCE_TIME\n// must be an integer and less than 16\nvar version = 7;\n\n// Counter is used when shortid is called multiple times in one second.\nvar counter;\n\n// Remember the last time shortid was called in case counter is needed.\nvar previousSeconds;\n\n/**\n * Generate unique id\n * Returns string id\n */\nfunction build(clusterWorkerId) {\n    var str = '';\n\n    var seconds = Math.floor((Date.now() - REDUCE_TIME) * 0.001);\n\n    if (seconds === previousSeconds) {\n        counter++;\n    } else {\n        counter = 0;\n        previousSeconds = seconds;\n    }\n\n    str = str + generate(version);\n    str = str + generate(clusterWorkerId);\n    if (counter > 0) {\n        str = str + generate(counter);\n    }\n    str = str + generate(seconds);\n    return str;\n}\n\nmodule.exports = build;\n","'use strict';\n\nvar alphabet = require('./alphabet');\nvar random = require('./random/random-byte');\nvar format = require('nanoid/format');\n\nfunction generate(number) {\n    var loopCounter = 0;\n    var done;\n\n    var str = '';\n\n    while (!done) {\n        str = str + format(random, alphabet.get(), 1);\n        done = number < (Math.pow(16, loopCounter + 1 ) );\n        loopCounter++;\n    }\n    return str;\n}\n\nmodule.exports = generate;\n","'use strict';\n\nvar crypto = typeof window === 'object' && (window.crypto || window.msCrypto); // IE 11 uses window.msCrypto\n\nvar randomByte;\n\nif (!crypto || !crypto.getRandomValues) {\n    randomByte = function(size) {\n        var bytes = [];\n        for (var i = 0; i < size; i++) {\n            bytes.push(Math.floor(Math.random() * 256));\n        }\n        return bytes;\n    };\n} else {\n    randomByte = function(size) {\n        return crypto.getRandomValues(new Uint8Array(size));\n    };\n}\n\nmodule.exports = randomByte;\n","// This file replaces `format.js` in bundlers like webpack or Rollup,\n// according to `browser` config in `package.json`.\n\nmodule.exports = function (random, alphabet, size) {\n  // We can’t use bytes bigger than the alphabet. To make bytes values closer\n  // to the alphabet, we apply bitmask on them. We look for the closest\n  // `2 ** x - 1` number, which will be bigger than alphabet size. If we have\n  // 30 symbols in the alphabet, we will take 31 (00011111).\n  // We do not use faster Math.clz32, because it is not available in browsers.\n  var mask = (2 << Math.log(alphabet.length - 1) / Math.LN2) - 1\n  // Bitmask is not a perfect solution (in our example it will pass 31 bytes,\n  // which is bigger than the alphabet). As a result, we will need more bytes,\n  // than ID size, because we will refuse bytes bigger than the alphabet.\n\n  // Every hardware random generator call is costly,\n  // because we need to wait for entropy collection. This is why often it will\n  // be faster to ask for few extra bytes in advance, to avoid additional calls.\n\n  // Here we calculate how many random bytes should we call in advance.\n  // It depends on ID length, mask / alphabet size and magic number 1.6\n  // (which was selected according benchmarks).\n\n  // -~f => Math.ceil(f) if n is float number\n  // -~i => i + 1 if n is integer number\n  var step = -~(1.6 * mask * size / alphabet.length)\n  var id = ''\n\n  while (true) {\n    var bytes = random(step)\n    // Compact alternative for `for (var i = 0; i < step; i++)`\n    var i = step\n    while (i--) {\n      // If random byte is bigger than alphabet even after bitmask,\n      // we refuse it by `|| ''`.\n      id += alphabet[bytes[i] & mask] || ''\n      // More compact than `id.length + 1 === size`\n      if (id.length === +size) return id\n    }\n  }\n}\n","'use strict';\nvar alphabet = require('./alphabet');\n\nfunction isShortId(id) {\n    if (!id || typeof id !== 'string' || id.length < 6 ) {\n        return false;\n    }\n\n    var nonAlphabetic = new RegExp('[^' +\n      alphabet.get().replace(/[|\\\\{}()[\\]^$+*?.-]/g, '\\\\$&') +\n    ']');\n    return !nonAlphabetic.test(id);\n}\n\nmodule.exports = isShortId;\n","'use strict';\n\nmodule.exports = 0;\n","import {  useEffect, useState } from \"react\";\r\nimport Typewriter from \"typewriter-effect\";\r\nimport { motion } from \"framer-motion\"\r\nimport { Avatar,  useColorModeValue } from '@chakra-ui/react';\r\nimport qna from './daks.json'\r\nimport shortid from \"shortid\";\r\nimport firebase from './firebase'\r\nconst Daks=()=>{\r\n    useEffect(()=>{\r\n        if(window.location.hostname!=='localhost')\r\n        firebase.analytics().logEvent(\"daks\");\r\n    },[]);\r\n    const title=\"Q & A with Dr. M Dakshayini\"\r\n    \r\n    const [headingType,setHeadingType]=useState(true);\r\n    return <div className=\"container\" style={{minHeight:\"95vh\"}}>\r\n        <div style={{paddingTop:\"65px\"}}>\r\n     \r\n     </div>\r\n          <br/>\r\n       <div style={{padding:\"5px 20px\"}}>\r\n       { headingType?<div className=\"body2 typewriter largest\">\r\n        <Typewriter options={{loop:false,delay:50}}\r\n            onInit={(typewriter)=> {\r\n            typewriter\r\n            .typeString(title) \r\n            .callFunction(() => {\r\n                typewriter.stop();\r\n                    setHeadingType(false);\r\n            })\r\n            .start();\r\n        }}\r\n        />\r\n        </div>: <div className=\"body2  largest \">\r\n        {title}\r\n        </div>}\r\n        <p className=\"body lighttext\" style={{paddingLeft:\"10px\"}}>15th May 22</p>\r\n        <p className=\"body lighttext\">   - <a href=\"https://www.instagram.com/__khushiiiieee/\" target=\"_blank\" rel=\"noreferrer\">Khushi</a>, <a href=\"https://www.instagram.com/mahnoor._.shah/\" target=\"_blank\" rel=\"noreferrer\">Mahnoor</a>, <a href=\"https://www.instagram.com/keerthan_h_m/\" target=\"_blank\" rel=\"noreferrer\">Keerthan</a></p>\r\n        \r\n        <br/>\r\n        {headingType?null:<motion.div initial={{ y: \"40px\",opacity:0 }} transition={{ duration: 0.5 }}\r\n        animate={{ y: \"0px\",opacity:1 }} className=\"row align-items-center\">\r\n        <div className=\"col-auto\">\r\n            <Avatar size=\"xl\" name=\"M Dakshayini\" src=\"/assets/team/daks.png\" />\r\n        </div>\r\n        <div className=\"col medium\">\r\n               <p className=\"body lighttext\">Professor, ISE</p>\r\n               <p className=\"body lighttext \">HOD, ISE 19-22</p>\r\n        </div>\r\n        </motion.div>}\r\n        <br/>\r\n        {\r\n           headingType?null:<Content></Content> \r\n        }\r\n       \r\n       \r\n       </div>\r\n    </div>\r\n}\r\n\r\nexport default Daks\r\n\r\nconst Content=()=>{\r\n    const col=useColorModeValue(\"#280659\",\"#abb4d1\")\r\n    const col2=useColorModeValue(\"#660F56\",\"#d8b8c1\")\r\n   return  <motion.div className=\"body\"  initial={{ y: \"40px\",opacity:0 }} transition={{ duration: 0.5,delay:0.5 }}\r\n   animate={{ y: \"0px\",opacity:1 }}>\r\n    Meet Dr M Dakshayini, a professor and the former HOD of the ISE Department. She finds herself inclined towards technology, and you would always get to learn something new around her. Her perfect blend of joviality and discipline makes students fond of her. She has been a role model to many and continues to do so.\r\n<br/>\r\n<br/>\r\n\r\n<br/>\r\n\r\n<br/>\r\n\r\n\r\n{\r\n    qna.map((q,ind)=>{\r\n        let color=ind%2===0?col2:col\r\n        let ques=[]\r\n        let ans=[]\r\n        if(Array.isArray(q.que))\r\n            {\r\n                ques=[...q.que]\r\n                ans=[...q.ans]\r\n            }\r\n        else\r\n        {\r\n            ques=[q.que]\r\n            ans=[q.ans]\r\n        }\r\n\r\n        return<> {ques.map((que,index)=>{\r\n            return <div key={shortid.generate()} style={{color:color}}>\r\n                    <div className=\"row question\" >\r\n                        <div className=\"col-auto\">\r\n                            <Avatar size=\"sm\" name={\"ISE SC\"} src={\"/assets/iselogo.png\"} />\r\n                        </div>\r\n                        <div className=\"col align-self-center bold\">\r\n                            {que}\r\n                        </div>\r\n                    </div>\r\n                    <br/>\r\n                    <div className=\"row answer\" >\r\n                        <div className=\"col-auto\">\r\n                            <Avatar size=\"sm\" name=\"M Dakshayini\" src=\"/assets/team/daks.png\" />\r\n                        </div>\r\n                        <div className=\"col\">\r\n                            {ans[index]}\r\n                        </div>\r\n                    </div>\r\n                    <br/>\r\n        </div>\r\n        })}\r\n        <br/>\r\n        <br/>\r\n        <br/>\r\n        </>\r\n        \r\n    })\r\n}\r\n\r\n\r\n\r\n    </motion.div>\r\n}"],"sourceRoot":""}